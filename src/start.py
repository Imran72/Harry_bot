import telebot
import property
from .Mode import Mode
import pickle

bot = telebot.TeleBot(property.token)
moder = Mode()


@bot.message_handler(commands=['start'])
def start_cmd(message):
    name = message.chat.first_name
    keybd = telebot.types.ReplyKeyboardMarkup(True)
    btn3 = telebot.types.KeyboardButton(text='–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–ºÔ∏è')
    keybd.add(btn3)
    text = '–ü—Ä–∏–≤–µ—Ç, {}! \n \n'.format(name)
    text += "–Ø —Ç–≤–æ–π –Ω–æ–≤—ã–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –¥—Ä—É–≥. –ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–∞—Ä—Ä–∏!\n–¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫–æ –º–Ω–µ –∑–∞ —Å–æ–≤–µ—Ç–æ–ºü§ì"
    bot.send_message(message.chat.id, text, reply_markup=keybd)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ 0-–ø–æ–ª–æ–∂–µ–Ω–∏—è
@bot.message_handler(content_types=['text'], func=lambda message: moder.mode == Mode.States.INITIAL_STATE)
def send_text(message):
    chat_id = message.chat.id
    text = message.text

    message = ""

    if text == '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–ºÔ∏è':
        message = "–†–∞—Å—Å–∫–∞–∂–∏ –≤ –æ–¥–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –æ —Ç–æ–º, —á—Ç–æ —É —Ç–µ–±—è —Å–µ–π—á–∞—Å –Ω–∞ –¥—É—à–µ."
        moder.mode = Mode.States.RECORDING_STATE
    bot.send_message(chat_id, message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏, –∏–Ω–∞—á–µ –≥–æ–≤–æ—Ä—è, 1-—Å–æ—Å—Ç–æ—è–Ω–∏—è
@bot.message_handler(content_types=['text'], func=lambda message: moder.mode == Mode.States.RECORDING_STATE)
def send_text(message):
    chat_id = message.chat.id
    text = message.text

    filename = 'finalized_model.sav'

    loaded_model = pickle.load(open(filename, 'rb'))

    emo = loaded_model.predict([text])[0]

    if emo == -1:
        message = "–ú–æ–µ –±–∏–æ–Ω–∏—á–µ—Å–∫–æ–µ —Å–µ—Ä–¥—Ü–µ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ç–µ–±–µ –ø–ª–æ—Ö–æ"
    else:
        message = "–î—Ä—É–∂–æ–∫, –¥–∞ —Ç—ã –ø–æ–¥–∏ —Å—á–∞—Å—Ç–ª–∏–≤. –Ø —Å–¥–µ–ª–∞—é —Ç–≤–æ–π –¥–µ–Ω—å –µ—â–µ —è—Ä—á–µ!"

    moder.mode = Mode.States.INITIAL_STATE
    bot.send_message(chat_id, message)

bot.polling()
